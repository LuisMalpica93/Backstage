apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: ITMG-OPGW-SEC-CryptoKeyExchange
  description: |
    Service that provides the means for encryption key exchange using the Diffie-Hellman scheme. After following the process, both the client and the server will have the same shared key without having to have sent the key explicitly. The sessionId is the server-side identifier to locate the shared key. The contract is based on BIAN version 11.
  version: 1.0.0
spec:
  type: openapi
  lifecycle: experimental
  owner: operational-gateway
  system: WSO2-API_MANAGER
  definition: |
    openapi: 3.0.1
    info:
      title: ITMG-OPGW-SEC-CryptoKeyExchange
      description: Service that provides the means for encryption key exchange using the Diffie-Hellman scheme. After following the process, both the client and the server will have the same shared key without having to have sent the key explicitly. The sessionId is the server-side identifier to locate the shared key. The contract is based on BIAN version 11.
    #Version del contrato
      version: 1.0.0
    
    servers:
      - url: wso2.apiman.invex
        description: Dev
        
    paths:
      /api/v1/ITManagement/OperationalGateway/PublicKeys:
        get:
        
          parameters:
          
            - $ref: '#/components/parameters/Authorization'
            - $ref: '#/components/parameters/User-Agent'
            - $ref: '#/components/parameters/Date'
            - $ref: '#/components/parameters/Channel-Id'
            - $ref: '#/components/parameters/X-brand-device'
            - $ref: '#/components/parameters/X-app-version'
            - $ref: '#/components/parameters/X-os-version'
            - $ref: '#/components/parameters/X-os'
            - $ref: '#/components/parameters/X-app-device-uid'
            - $ref: '#/components/parameters/X-tx-id'
            - $ref: '#/components/parameters/X-user-location'
            - $ref: '#/components/parameters/tnxv'
            - $ref: '#/components/parameters/contextId'
    
          tags:
            - CR Generation Controller
          summary: RqCR- Request the public key from the server.
          description: The client requests the public key from the server. The sessionId is also received, which will be the identifier with which the server can retrieve the values for the End to End (E2E) encryption process shared with the client.
         
          responses:
            '200':
              $ref: '#/components/responses/ServerPublicKeyModelResponse'
            '400':
              $ref: '#/components/responses/BadRequest'
            '403':
              $ref: '#/components/responses/Forbidden'
            '404':
              $ref: '#/components/responses/NotFound'
            '408':
              $ref: '#/components/responses/TimeOut'
            '500':
              $ref: '#/components/responses/InternalServerError'
    
    
      /api/v1/ITManagement/OperationalGateway/RegisterPublicKeys:
        post:
        
          parameters:
          
            - $ref: '#/components/parameters/Authorization'
            - $ref: '#/components/parameters/Content-Type'
            - $ref: '#/components/parameters/Accept'
            - $ref: '#/components/parameters/Content-Length'
            - $ref: '#/components/parameters/User-Agent'
            - $ref: '#/components/parameters/Date'
            - $ref: '#/components/parameters/Channel-Id'
            - $ref: '#/components/parameters/X-brand-device'
            - $ref: '#/components/parameters/X-app-version'
            - $ref: '#/components/parameters/X-os-version'
            - $ref: '#/components/parameters/X-os'
            - $ref: '#/components/parameters/X-app-device-uid'
            - $ref: '#/components/parameters/X-tx-id'
            - $ref: '#/components/parameters/X-user-location'
            - $ref: '#/components/parameters/tnxv'
            - $ref: '#/components/parameters/contextId'
    
          tags:
            - CR Generation Controller
          summary: RqCR-  Register public client key
          description: The client sends the client public key to the server. At this moment both the client and the server exchanged their public keys, both the client and server can calculate the shared key that will be used as the AES key for E2E encryption. 
          
          requestBody:
              $ref: '#/components/requestBodies/ClientDataRequest'
         
          responses:
            '204':
              description: Shared key generated successfully.
              content:
                application/json:
                  schema:
                    type: object
            '400':
              $ref: '#/components/responses/BadRequest'
            '403':
              $ref: '#/components/responses/Forbidden'
            '404':
              $ref: '#/components/responses/NotFound'
            '408':
              $ref: '#/components/responses/TimeOut'
            '500':
              $ref: '#/components/responses/InternalServerError'
              
    components:
      schemas:
        HTTPError:
          type: object
          properties:
            type:
              type: string
              description: The type of the error (e.g., client error, server error).
              example: "Error"
            code:
              type: string
              description: A specific error code.
              example: "400"
            details:
              type: string
              description: Detailed information about the error.
              example: "Invalid request parameters"
            location:
              type: string
              description: The location where the error occurred (e.g., a URL or endpoint).
              example: "/api/v1/resource"
            traceId:
              type: string
              description: A unique identifier for the error, useful for troubleshooting.
              example: "f4d0a837-56b8-4baf-bbfe-9294a34331bc"
            timestamp:
              type: string
              format: date-time
              description: The timestamp when the error occurred.
              example: "2025-01-30T14:35:58Z"
          description: Schema representing an HTTP error response.
          
        ClientDataRequest:
          type: object
          properties:
            clientKey:
              $ref: '#/components/schemas/ClientPublicKeyModel'
              
        ClientPublicKeyModel:
          type: object
          properties:
            clientPublicKey:
              type: string
              description: It is the client public key generated by the frontend that will be used in the Diffie-Hellman algorithm to calculate the shared key.
              example:
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE3mxqXR9CHtfqxMinhqyiQ7kG/GUv3y6KRJmkTDyaCZc6cUqJ4mQTpePPRKCRJuyz2XCoYxmugkDIOivzN93Zmw==
              
        ServerPublicKeyModel:
          type: object
          properties:
            serverPublicKey:
              type: string
              description: It is the server public key managed by the backend that will be used in the Diffie-Hellman algorithm to calculate the shared key.
              example:
                MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEHqd/y+EWRegrHrFTaD09dBf3G3O8BtDHb1oZqLAS7lJjPZiobZtRSa9loSYzb/0rDTWDb0l1+h0re3OE46PLbQ==
     
            contextId:
              type: string
              format: uuid
              description: Identifier used as a key in the backend to save and retrieve data associated with the handshake process.
        
      parameters:  
        Authorization:
          name: Authorization
          in: header
          schema:
            type: string
            description: Token de aplicación
            example: 77128ffa-6201-3c4a-939a-e5d0b2343b29
        
        Content-Type:
          name: Content-Type
          in: header
          schema:
            type: string
            description: Content-Type
            example: application/json
            
        Accept:    
            name: Accept
            in: header
            schema:
             type: string
            description: Accept
            example: application/json
        
        Content-Length:  
            name: Content-Length
            in: header
            schema: 
             type: integer
            description: Content-Length
            example: 142
            
        User-Agent:    
            name: User-Agent
            in: header
            schema: 
             type: integer
            description: Content-Length 
            example: 142546
            
        Date: 
            name: Date
            in: header
            schema: 
             type: string
             format: date
            description: Timestamp de la petición (dd/mm/yyyy hh:mm:ss)
            example: 15/01/2025 16:35:58
            
        Channel-Id:    
            name: channel-id
            in: header
            schema:
              type: string
            description: Constante ONE para la aplicación, se utiliza para la traza e identificación de la petición de origen.
            example: ONE
            
        X-brand-device:    
            name: X-brand-device
            in: header
            schema: 
             type: string
            description: Fabricante del dispositivo (Apple, Samsung, Google, Oppo, etc..)
            example: Samsung
            
        X-app-version:   
            name: X-app-version
            in: header
            schema: 
             type: number
             format: float
            description: Versión del aplicativo que se está ejecutando (1.0.0, 1.0.1, 2.0.0, etc…)
            example: 1.0.0
        
        X-app-device-model:    
            name: X-app-device-model
            in: header
            schema: 
             type: string
            description: Modelo del dispositivo (SM-900, iPhone 8, iPhone X, moto-g)
            example: SM-900
            
        X-os-version:
            name: X-os-version
            in: header
            schema: 
             type: number
             format: float
            description: Versión de sistema operativo (16.1, 15.0, 12, etc…)
            example: 16.1
            
        X-os:
            name: X-os
            in: header
            schema: 
             type: string
            description: Sistema operativo del dispositivo (android, ios, etc…)
            example: android
            
        X-app-device-uid:    
            name: X-app-device-uid
            in: header
            schema: 
             type: string
            description: Identificador del dispositivo (Android deviceId, iOS UDI, 34470f8cea3d33e9,  611975b5-5d14-f041-5ef8-b19b1f9a0d4f)
            example: 34470f8cea3d33e9
        
        X-tx-id:    
            name: X-tx-id
            in: header
            schema: 
             type: string
            description: ID de request, UUID random por sesión o pre-sesión.
            example: 07f48e1e-c942-4652-bd5b-27437561e5f1
            
        X-user-location:    
            name: X-user-location
            in: header
            schema: 
             type: string
            description: Se enviará una cadena cifrada en AES con el siguiente formato user|latitude|longitude
            example: B7doPjC3T-2tKujLRsuB8F69gyy02WfDg0GIbFIrPTU=
          
        tnxv:  
            name: tnxv
            in: header
            schema: 
             type: string
            description: (WAF/aplicación)
    
        sessionId:
              name: sessionId
              in: header
              schema:
                type: string
                format: uuid
                description: Identifier used as a key in the backend to save and retrieve data associated with the handshake process.
                
        contextId:
              name: contextId
              in: header
              schema:
                type: string
                format: string
                description: Identifier used as a key in the backend to index the generated keys.
    
      requestBodies:
                
        ClientDataRequest:
          description: Represents the key generation request through a secure channel
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientDataRequest"        
    
      responses:
      
        BadRequest:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        Forbidden:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        NotFound:
          description: NotFound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        TimeOut:
          description: TimeOut
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
        InternalServerError:
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPError'
                
        ServerPublicKeyModelResponse:
          description:   Shared key generated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPublicKeyModel'
